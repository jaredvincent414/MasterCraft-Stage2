name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests
      env:
        DEBUG: 'False'
        SECRET_KEY: 'test-secret-key'
        DATABASE_URL: 'postgres://test_user:test_password@localhost:5432/test_db'
        PAYPAL_MODE: 'sandbox'
        PAYPAL_CLIENT_ID: 'test-client-id'
        PAYPAL_CLIENT_SECRET: 'test-client-secret'
      run: |
        python manage.py test
        
    - name: Run linting
      run: |
        pip install flake8 black
        flake8 .
        black . --check

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Collect static files
      env:
        DEBUG: 'False'
        SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      run: |
        python manage.py collectstatic --noinput
        
    - name: Deploy to Render
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      run: |
        # Check if required secrets are set
        if [ -z "$RENDER_API_KEY" ] || [ -z "$RENDER_SERVICE_ID" ]; then
          echo "Error: RENDER_API_KEY or RENDER_SERVICE_ID is not set"
          exit 1
        fi
        
        # Trigger Render deployment
        curl -X POST "https://api.render.com/deploy/srv-${RENDER_SERVICE_ID}?key=${RENDER_API_KEY}" 